@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn 'Unrecognized prefix: #{$prefix}';
    }
  }
}
@mixin backface-visibility($visibility) {
  @include prefix(backface-visibility, $visibility, webkit spec);
}
@mixin user-select($value: none) {
  @include prefix(user-select, $value, webkit moz ms spec);
}
@mixin transform($property: none) {
  @include prefix(transform, $property, webkit spec);
}
@mixin transform-style($style: flat) {
  @include prefix(transform-style, $style, webkit spec);
}
@mixin transform-origin($axes: 50%) {
  @include prefix(transform-origin, $axes, webkit spec);
}
@mixin transition($properties...) {
  @include prefix(transition, $properties, spec);
}
@mixin transition-delay($times...) {
  @include prefix(transition-delay, $times, spec);
}
@mixin transition-duration($times...) {
  @include prefix(transition-duration, $times, spec);
}
@mixin transition-timing-function($motions...) {
  @include prefix(transition-timing-function, $motions, spec);
}
@mixin transition-property($properties...) {
  @include prefix(transition-property, $properties, spec);
}
@mixin animation($animations...) {
  @include prefix(animation, $animations, webkit spec);
}
@mixin animation-name($names...) {
  @include prefix(animation-name, $names, webkit spec);
}
@mixin animation-duration($times...) {
  @include prefix(animation-duration, $times, webkit spec);
}
@mixin animation-timing-function($motions...) {
  @include prefix(animation-timing-function, $motions, webkit spec);
}
@mixin animation-delay($times...) {
  @include prefix(animation-delay, $times, webkit spec);
}
@mixin animation-fill-mode($modes...) {
  @include prefix(animation-fill-mode, $modes, webkit spec);
}
@mixin animation-iteration-count($iteration...) {
  @include prefix(animation-iteration-count, $iteration, webkit spec);
}
@mixin appearance($value) {
  @include prefix(appearance, $value, webkit spec);
}
@mixin filter($function: none) {
  @include prefix(filter, $function, webkit spec);
}
@mixin placeholder {
  $placeholders: ":-webkit-input" ":-moz" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}
@mixin selection($current-selector: false) {
  @if $current-selector {
    &::-moz-selection {
      @content;
    }
    &::selection {
      @content;
    }
  } @else {
    ::-moz-selection {
      @content;
    }
    ::selection {
      @content;
    }
  }
}
@mixin flexbox() {
  display: -ms-flexbox;
  display: flex;
}
@mixin inline-flex() {
  display: -ms-inline-flexbox;
  display: inline-flex;
}
@mixin flex($value: 0 1 auto) {
  @include prefix(flex, $value, ms spec);
}
@mixin flex-wrap($value: nowrap) {
  @include prefix(flex-wrap, $value, ms spec);
}
@mixin flex-flow($value) {
  @include prefix(flex-flow, $value, ms spec);
}
@mixin flex-grow($number: 0) {
  -ms-flex-positive: $number;
  @include prefix(flex-grow, $number, spec);
}
@mixin flex-shrink($number: 1) {
  -ms-flex-negative: $number;
  @include prefix(flex-shrink, $number, spec);
}
@mixin flex-basis($width: auto) {
  -ms-flex-preferred-size: $width;
  @include prefix(flex-basis, $width, spec);
}
@mixin flex-direction($value) {
  -ms-flex-direction: $value;
  @include prefix(flex-direction, $value, spec);
}
@mixin align-self($value: auto) {
  $alt-value: $value;

  @if $value == "flex-start" {
    $alt-value: start;
  } @else if $value == "flex-end" {
    $alt-value: end;
  }

  -ms-flex-item-align: $alt-value;
  @include prefix(align-self, $value, spec);
}
@mixin align-items($value: stretch) {
  $alt-value: $value;

  @if $value == "flex-start" {
    $alt-value: start;
  } @else if $value == "flex-end" {
    $alt-value: end;
  }

  -ms-flex-align: $alt-value;
  @include prefix(align-items, $value, spec);
}
@mixin align-content($value: stretch) {
  $alt-value: $value;

  @if $value == "flex-start" {
    $alt-value: start;
  } @else if $value == "flex-end" {
    $alt-value: end;
  } @else if $value == "space-between" {
    $alt-value: justify;
  } @else if $value == "space-around" {
    $alt-value: distribute;
  }

  -ms-flex-line-pack: $alt-value;
  @include prefix(align-content, $value, spec);
}
@mixin justify-content($value: flex-start) {
  $alt-value: $value;

  @if $value == "flex-start" {
    $alt-value: start;
  } @else if $value == "flex-end" {
    $alt-value: end;
  } @else if $value == "space-between" {
    $alt-value: justify;
  } @else if $value == "space-around" {
    $alt-value: distribute;
  }

  -ms-flex-pack: $alt-value;
  @include prefix(justify-content, $value, spec);
}
@mixin order($int: 0) {
  -ms-flex-order: $int;
  @include prefix(order, $int, spec);
}

$color-bground: {{ settings.color_body_bground | default: '#fff' }};
$color-link: {{ settings.color_body_link | default: '#000' }};
$color-heading: {{ settings.color_body_heading | default: '#000' }};
$color-border: {{ settings.color_body_border | default: '#e7e7e7' }};
$color-highlight: {{ settings.color_body_highlight | default: '#00c9b7' }};
$color-highlight-text: #fff;

$btn-color: {{ settings.color_btn_text | default: '#fff' }};
$btn-border: {{ settings.color_btn_border | default: '#000' }};
$btn-bground: {{ settings.color_btn_bground | default: '#000' }};
$btn-color_hover: {{ settings.color_btn_text_hover | default: '#000' }};
$btn-border_hover: {{ settings.color_btn_border_hover | default: '#000' }};
$btn-bground_hover: {{ settings.color_btn_bground_hover | default: '#fff' }};
$btn-font_size: {{ settings.btn_font_size | default: 12 | append: 'px' }};
$btn-font_weight: {{ settings.btn_font_weight | default: 400 }};


// Password page
@-webkit-keyframes zoom-fade-password{0%{opacity:0;-webkit-transform:scale(1.4, 1.4);transform:scale(1.4, 1.4)}5%{opacity:1;-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{opacity:1;-webkit-transform:scale(1.2, 1.2);transform:scale(1.2, 1.2)}}@keyframes zoom-fade-password{0%{opacity:0;-webkit-transform:scale(1.4, 1.4);transform:scale(1.4, 1.4)}5%{opacity:1;-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{opacity:1;-webkit-transform:scale(1.2, 1.2);transform:scale(1.2, 1.2)}}
.template-password {
  &.password-opened {
    overflow: hidden;

    .password__overlay {
      opacity: 1;
      pointer-events: visible;
    }
    .modal__close {
      opacity: 1;
      @include transition-delay(0.3s);

      &:before, &:after {
        @include transition-delay(.5s);
      }
      &:before {
        @include transform(rotate(-45deg) translateX(0%));
      }
      &:after {
        @include transform(rotate(45deg) translateX(0%));
      }
    }
    .modal__content {
      opacity: 1;
      @include transition-delay(0.3s);
    }
    .password-modal {
      @include transform(translateY(0));
      @include transition(transform 1s cubic-bezier(0.19, 1, 0.22, 1),height 1s ease);
    }
  }
  a, h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
    color: inherit;
  }
  #ra-notify__sales {
    display: none !important;
  }
  .password-image {
    position: fixed;
    z-index: -1;
    opacity: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: top center;
    @include animation(zoom-fade-password 20s ease 1s forwards);
  }
  .password-bground {
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .password-page {
    padding: 90px 0 0;
    text-align: center;
  }
  .header__logo-link {
    font-size: 36px;
    font-weight: 700;
    margin-bottom: 0;
  }
  .header__logo-image {
    display: inline-block;
  }
  .password-login {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1;
    padding: 0 1.4375rem;
    min-height: 3.125rem;
    max-height: 3.125rem;
    line-height: 4;
  }
  .password__title {
    font-family: "Abril Fatface", serif;
    font-size: 84px;
    margin-top: 20px;
    margin-bottom: 0;
  }
  .password-message {
    font-family: "Old Standard TT", serif;
    font-style: italic;
    font-size: 18px;
    position: relative;
    padding-bottom: 20px;
    margin-top: 60px;

    &:after {
      content: '';
      width: 50px;
      border-top: 1px solid $color-border;
      position: absolute;
      bottom: 0;
      left: 50%;
      margin-left: -25px;
    }
  }
  .password-newsletter {
    max-width: 500px;
    margin: 0 auto;
    margin-top: 60px;
    
    .alert {
      margin-bottom: 30px;
    }
  }
  .password__form-heading {
    font-size: 24px;
    font-weight: 700;
    margin-bottom: 20px;
  }
  .password__input-group {
    input {
      max-width: 250px;
      min-height: 3.125rem;
      font-size: 1rem;
      border-right-width: 0;
      font-weight: 300;
      color: $btn-color_hover;
      border-color: $btn-border_hover;
      background-color: $btn-bground_hover;
    }
    button {
      padding: 0 1.4375rem;
      min-height: 3.125rem;
      max-height: 3.125rem;
      line-height: 4;
    }
  }
  .password-sharing {
    margin-top: 60px;
  }
  .social-sharing {
    @include flexbox();
    @include justify-content(center);

    li {
      padding: 0 5px;
    }
  }
  .password-countdown {
    margin-top: 60px;
    min-height: 90px;
  }
  .countdown-section {
    display: inline-block;
    margin: 0 20px;
  }
  .countdown-amount {
    font-size: 60px;
    line-height: 1.2;
    font-family: "Abril Fatface", serif;
    letter-spacing: 1px;
  }
  .countdown-period {
    display: block;
    font-size: 12px;
    text-transform: uppercase;
    font-weight: 900;
  }
  .password-powered-by {
    padding: 30px 0 20px;
    line-height: 24px;
  }
  .alert__message {
    text-align: left;
  }
  .password-modal {
    position: fixed;
    overflow: hidden;
    left: 0;
    top: 0;
    width: 100%;
    height: 50vh;
    min-height: 400px;
    z-index: 30;
    background-color: $color-bground;
    @include transform(translateY(-100%));
    @include transition(transform 0.75s cubic-bezier(0.19, 1, 0.22, 1),height 1s ease);
  }
  .modal__content {
    padding: 15vh 0 5vh 0;
    opacity: 0;
    @include transition(opacity 1s ease);
    
    .infotext, .password__input-link {
      text-transform: uppercase;
      font-size: 11px;
      font-weight: 600;
      letter-spacing: 1px;
      width: 50vw;
      margin: 0 auto;
      margin-bottom: 20px;
      color: rgba($color-heading,.5);
    }
    .password__input-link {
      margin-top: 30px;
      margin-bottom: 0;
      
      a {
        color: $color-link;
        
        &:hover {
          color: $color-highlight;
        }
      }
    }
    form {
      width: 50vw;
      margin: 0 auto;
      position: relative;
      
      input[type="password"] {
        padding: .3em 3rem .3em 0em;
        height: auto;
        letter-spacing: -1px;
        line-height: 1.3;
        font-weight: 700;
        border-left: 0;
        border-right: 0;
        border-top: 0;
        font-size: calc(22px + 16 * (100vw - 320px) / 1480);

        @include placeholder {
          opacity: .6;
          @include transition(opacity .3s ease);
        }
        &:focus {
          @include placeholder {
            opacity: 1;
          }
          + button[type="submit"] {
            opacity: 1;
          }
        }
      }
      button[type="submit"] {
        background: none;
        border: none;
        padding: 0;
        margin: 0;
        position: absolute;
        top: 50%;
        right: 0;
        font-weight: 600;
        font-size: 16px;
        cursor: pointer;
        text-transform: lowercase;
        opacity: 0;
        color: $color-link;
        @include transform(translateY(-50%));
        @include transition(opacity .3s ease);
        
        &:hover {
          color: $color-highlight;
        }
      }
    }
  }
  .password__input-link {
    margin-top: 20px;

    a {
      display: inline-block;
      color: $color-highlight;
    }
  }
  .modal__close {
    top: 80px;
    left: auto;
    z-index: 5;
    right: calc(8.6805555556vw - 36.6666666667px);
  }
  .password__overlay {
    position: fixed;
    height: 100vh;
    width: 100vw;
    top: 0;
    left: 0;
    margin: auto;
    opacity: 0;
    pointer-events: none;
    z-index: 29;
    background-color: rgba(0,0,0,0.3);
    cursor: url(cross.svg?1),url(cross.png),zoom-out;
    @include transition(opacity 1s cubic-bezier(0.19, 1, 0.22, 1),visibility 1s steps(1, end));
    @include transition-delay(0.2s);
  }
  #weketing_google_translate_element {
    display: none;
  }
}
@media (max-width: 991px) {
  .template-password {
    .modal__close {
      right: 30px;
    }
  }
}
@media (max-width: 767px) {
  .template-password {
    .password-modal {
      height: 40vh;
      min-height: 300px;
    }
    .modal__close {
      top: 30px;
    }
    .modal__content {
      padding: 10vh 0 5vh 0;
      
      .infotext, .password__input-link, form {
        width: 75vw;
      }
      form input[type="password"] {
        padding: .6em 3rem .3em 0em;
        font-size: 22px;
        font-weight: 500;
      }
    }
  }
}
@media (max-width: 575px) {
  .template-password {
    .password__title {
      font-size: 60px;
    }
    .countdown-section {
      margin: 0 10px;
    }
    .countdown-amount {
      font-size: 42px;
      line-height: 1.2;
    }
  }
}